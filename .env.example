# Discord token, required
DISCORD_TOKEN="..."
# Discord Bot Application ID, required
DISCORD_APPLICATION_ID="..."
# Discord test guild ID, optional, if not specified no guild commands will be registered
DISCORD_TEST_GUILD_ID="..."

# Redis hostname, usually the name of the service in docker-compose.yml, default is localhost, optional
REDIS_HOST="cache"
# Redis port, default is 6379, optional
REDIS_PORT=6379
# Redis password, default is none, optional
REDIS_PASSWORD=""
# Redis database, default is 0, optional
REDIS_DATABASE=0
# Redis URL, uses the above values to create a URL, required
# If you intend to use this, but not the above values, you can set this directly
# REDIS_URL="redis://:password@hostname:port/db" :: example
REDIS_URL="redis://${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/${REDIS_DATABASE}"

# Postgres hostname, usually the name of the service in docker-compose.yml, default is database, optional
POSTGRES_HOST=database
# Postgres port, default is 5432, optional
POSTGRES_PORT=5432
# Postgres username, default is admin, optional
POSTGRES_USER=admin
# Postgres password, default is root, optional
POSTGRES_PASSWORD=root
# Postgres database, default is anilist, optional
POSTGRES_DB=anilist
# Postgres URL, uses the above values to create a URL, required
# If you intend to use this, but not the above values, you can set this directly
# POSTGRES_URL="postgresql://admin:root@database:5432/bot?schema=db" :: example
POSTGRES_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?schema=db"

# The IP to bind to the API, required
AERI_IP="0.0.0.0"
# The port to bind to the API, required
AERI_PORT=8080

# Shard count, required
SHARD_COUNT=2